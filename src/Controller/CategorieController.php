<?php

namespace App\Controller;

use App\Entity\Categorie;
use App\Entity\CategorieFavories;
use App\Form\CategorieType;
use App\Repository\CategorieFavoriesRepository;
use App\Repository\CategorieRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Serializer\Encoder\XmlEncoder;
use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
use Symfony\Component\Serializer\Serializer;
use Symfony\Component\HttpFoundation\Request;

class CategorieController extends AbstractController
{





    /**
     * @Route("/categorie", name="categorie")
     */
    public function index(): Response
    {
        return $this->render('categorie/index.html.twig', [
            'controller_name' => 'CategorieController',
        ]);
    }
    
    /**
     * @Route("/admin/afficheCategorieAdmin",name="afficheCategorieAdmin")
     */

    function OrderByNomDql(CategorieRepository $repo)
    {
        $da = $repo->OrderByNom();
        return $this->render('admin/categorie/afficheAdmin.html.twig', ['data' => $da]);
    }

    //supprimer categorie
    /**
     * @Route("/delete/{id}",name="delete")
     */
    public function delete($id, CategorieRepository $rep)
    {
        $categorie = $rep->find($id);
        $ar = $this->getDoctrine()->getManager();
        $ar->remove($categorie);
        $ar->flush();
        return  $this->redirectToRoute("afficheCategorieAdmin");
    }

    /**
     * @param Request $request
     * @return Response
     * @Route ("admin/categorie/AjoutCategorie" , name="AjoutCategorie")
     */
    public function AjoutCategorie(Request $request)
    {
        $categorie = new Categorie();
        $form = $this->createForm(CategorieType::class, $categorie);
        $form->add('Ajouter', SubmitType::class);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $file = $form->get('image')->getData();

            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
            }
            $categorie->setImage($fileName);
            $em = $this->getDoctrine()->getManager();


            $em->persist($categorie);
            $em->flush();
            return $this->redirectToRoute('afficheCategorieAdmin');
        }
        return $this->render('admin/categorie/add.html.twig', [
            'form' => $form->createView(), 'editMode' => $categorie->getId() !== null
        ]);
    }
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    //update categorie
    /**
     * @Route("admin/categorie/Update/{id}", name="updateCategorie")
     */
    function updateCategorie(CategorieRepository $repository, $id, Request $request)
    {
        $catalogue = $repository->find($id);
        $form = $this->createForm(CategorieType::class, $catalogue);
        $form->add('Update', SubmitType::class);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $file = $form->get('image')->getData();

            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
            }
            $catalogue->setImage($fileName);
            $em = $this->getDoctrine()->getManager();
            $em->flush();
            return $this->redirectToRoute('afficheCategorieAdmin');
        }
        return $this->render('admin/categorie/update.html.twig', [
            'form' => $form->createView()
        ]);
    }


    /**
     * @param Request $req
     * @param NormalizerInterface $Normalizer
     * @param CategorieRepository $rep
     * @return Response
     * @throws \Symfony\Component\Serializer\Exception\ExceptionInterface
     * @Route("admin/afficheCategorieAdmin/searchCategoriex",name="searchCategoriex")
     */
    public function searchCategoriex(Request $req, CategorieRepository $rep)
    {
        $categorie = '';
        $requestString = $req->get('searchValue');
        if (strlen($requestString) > 0) {
            $categorie = $rep->findCategorieByNom($requestString);
        } else {
            $categorie = $rep->findAll();
        }
        $encoders = [new XmlEncoder(), new JsonEncoder()];
        $normalizers = [new ObjectNormalizer()];

        $serializer = new Serializer($normalizers, $encoders);
        $jsonContent = $serializer->serialize($categorie, 'json', ['ignored_attributes' => [
            'catalogue'

        ]]);

        $response = new Response(json_encode($jsonContent));
        $response->headers->set('Content-Type', 'application/json; charset=utf-8');
        return $response;
    }
}
